package View.SpareParts;

import Model.SpareParts;
import View.SpareParts.SparePartsUI;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.*;

/**
 *
 * @author theCodeMonster
 */
public class DisplaySparePartsUI extends javax.swing.JFrame {

    AddSparePartsUI spUI;
    
    private static final String URL = "jdbc:mysql://localhost/SparePartsDB";
    private static final String user = "root";
    private static final String password = "";

    int sparePartID = Integer.parseInt(spUI.spIDBox.getText());
    String nameOfItem = spUI.spNameBox.getText();
    String category = spUI.spCategoryBox.getSelectedItem().toString();
    String brand = spUI.spBrandBox.getText();
    int quantity = Integer.parseInt(spUI.spQuantityBox.getText());

    /**
     * Creates new form DisplaySpareParts
     */
    public DisplaySparePartsUI() {
        initComponents();
        spUI = new AddSparePartsUI();
//        jPanel1.setBackground(new Color(0, 0, 0, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kButton1 = new com.k33ptoo.components.KButton();
        scrollPane = new javax.swing.JScrollPane();
        spDisplayTable = new javax.swing.JTable();
        kButton4 = new com.k33ptoo.components.KButton();
        kButton5 = new com.k33ptoo.components.KButton();
        kButton3 = new com.k33ptoo.components.KButton();
        kButton2 = new com.k33ptoo.components.KButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kButton1.setForeground(new java.awt.Color(0, 0, 0));
        kButton1.setText("Return");
        kButton1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        kButton1.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        kButton1.setkBorderRadius(50);
        kButton1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton1.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 560, 90, -1));

        scrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrollPaneMouseClicked(evt);
            }
        });

        spDisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "SparePart ID", "Name Of Item", "Category", "Brand"
            }
        ));
        spDisplayTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spDisplayTableMouseClicked(evt);
            }
        });
        scrollPane.setViewportView(spDisplayTable);

        getContentPane().add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 920, 460));

        kButton4.setText("Delete");
        kButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        kButton4.setkBorderRadius(50);
        kButton4.setkEndColor(new java.awt.Color(0, 0, 0));
        kButton4.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        kButton4.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        kButton4.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        kButton4.setkStartColor(new java.awt.Color(0, 0, 0));
        kButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, 120, -1));

        kButton5.setText("Update");
        kButton5.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        kButton5.setkBorderRadius(50);
        kButton5.setkEndColor(new java.awt.Color(0, 0, 0));
        kButton5.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        kButton5.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        kButton5.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        kButton5.setkStartColor(new java.awt.Color(0, 0, 0));
        kButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 540, 120, -1));

        kButton3.setText("Search");
        kButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        kButton3.setkBorderRadius(50);
        kButton3.setkEndColor(new java.awt.Color(0, 0, 0));
        kButton3.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        kButton3.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        kButton3.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        kButton3.setkStartColor(new java.awt.Color(0, 0, 0));
        kButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 540, 120, -1));

        kButton2.setText("Add Item");
        kButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        kButton2.setkBorderRadius(50);
        kButton2.setkEndColor(new java.awt.Color(0, 0, 0));
        kButton2.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        kButton2.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        kButton2.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        kButton2.setkStartColor(new java.awt.Color(0, 0, 0));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, 140, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/mohamedazwar/Desktop/OOP Project/Photos/Spare-Parts-2.jpeg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        SparePartsUI manage = new SparePartsUI();
        manage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_kButton1ActionPerformed

    private void spDisplayTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spDisplayTableMouseClicked
        spUI.row = spDisplayTable.getSelectedRow();
        spUI.col = spDisplayTable.getSelectedColumn();
        System.out.println(spUI.row + ", " + spUI.col);
        spUI.spNameBox.setText(spUI.dtm.getValueAt(spUI.row, 0).toString());
        spUI.spIDBox.setText(spUI.dtm.getValueAt(spUI.row, 1).toString());
        String category = spUI.dtm.getValueAt(spUI.row, 2).toString();
        spUI.spBrandBox.setText(spUI.dtm.getValueAt(spUI.row, 3).toString());
        for (int i = 0; i < (spUI.spCategoryBox.getItemCount()); i++) {
            if (spUI.spCategoryBox.getItemAt(i).equalsIgnoreCase(category)) {
                spUI.spCategoryBox.setSelectedIndex(i);
            }
        }
    }//GEN-LAST:event_spDisplayTableMouseClicked

    private void scrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrollPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_scrollPaneMouseClicked

    private void kButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton4ActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(rootPane, "Delete This Data", "Delete", dialogButton);
        if (dialogResult == 0) {
            spUI.dtm.removeRow(spUI.row);
            spUI.spArr.remove(spUI.row);
            spUI.dtm.setRowCount(0);
            for (int i = 0; i < spUI.spArr.size(); i++) {
                Object[] objs = {spUI.spArr.get(i).getNameOfItem(), spUI.spArr.get(i).getSparePartID(), spUI.spArr.get(i).getCategory(), spUI.spArr.get(i).getBrand()};
                spUI.dtm.addRow(objs);
            }
            spUI.clearField();
        } else {

        }
    }//GEN-LAST:event_kButton4ActionPerformed

    private void kButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton5ActionPerformed
        String updatenameOfItem = spUI.spNameBox.getText();
        int updatesparePartID = Integer.parseInt(spUI.spIDBox.getText());
        String updatescategory = spUI.spCategoryBox.getSelectedItem().toString();
        String updatesbrand = spUI.spBrandBox.getText();

        spUI.spArr.get(spUI.row).setNameOfItem(updatenameOfItem);
        spUI.spArr.get(spUI.row).setSparePartID(updatesparePartID);
        spUI.spArr.get(spUI.row).setCategory(updatescategory);
        spUI.spArr.get(spUI.row).setBrand(updatesbrand);

        spUI.dtm.setRowCount(0);
        for (int i = 0; i < spUI.spArr.size(); i++) {
            Object[] objs = {spUI.spArr.get(i).getNameOfItem(), spUI.spArr.get(i).getSparePartID(), spUI.spArr.get(i).getCategory(), spUI.spArr.get(i).getBrand()};
            spUI.dtm.addRow(objs);
        }

    }//GEN-LAST:event_kButton5ActionPerformed

    private void kButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton3ActionPerformed
        String input = JOptionPane.showInputDialog(rootPane, "Search SparePart ID: ");
        for (int i = 0; i < spUI.spArr.size(); i++) {
            if (spUI.spArr.get(i).getSparePartID() == Integer.parseInt(input)) {
                JOptionPane.showMessageDialog(kButton3, "Found!!", "Search SparePart", 2);
                spUI.spNameBox.setText(spUI.spArr.get(i).getNameOfItem());
                spUI.spIDBox.setText(String.valueOf(spUI.spArr.get(i).getSparePartID()));
                String category = spUI.spArr.get(i).getCategory();
                spUI.spBrandBox.setText(spUI.dtm.getValueAt(spUI.row, 3).toString());
                for (int j = 0; j < (spUI.spCategoryBox.getItemCount()); j++) {
                    if (spUI.spCategoryBox.getItemAt(i).equalsIgnoreCase(category)) {
                        spUI.spCategoryBox.setSelectedIndex(i);
                    }
                }
                return; // quit after found
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Not Found!!", "Search", 2);
    }//GEN-LAST:event_kButton3ActionPerformed

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed

        int sparePartID = Integer.parseInt(spUI.spIDBox.getText());
        String nameOfItem = spUI.spNameBox.getText();
        String category = spUI.spCategoryBox.getSelectedItem().toString();
        String brand = spUI.spBrandBox.getText();
        int quantity = Integer.parseInt(spUI.spQuantityBox.getText());

        Connection conn = null;

        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(URL, user, password);

            Statement st = conn.createStatement(); // "(Statement)" you can put this on after = sign

            //            int sparePartID = Integer.parseInt(spIDBox.getText());
            //            String nameOfItem = spNameBox.getText();
            //            String category = spCategoryBox.getSelectedItem().toString();
            //            String brand = spBrandBox.getText();
            //            int quantity = Integer.parseInt(spQuantityBox.getText());
            String insert = "INSERT INTO SparePartsDB.SpareParts  VALUES ('" + sparePartID + "', '" + nameOfItem + "', '" + category + "', '" + brand + "', '" + quantity + "');";

            st.executeUpdate(insert);

            System.out.println("Connected Succesfully...");

        } catch (SQLException | ClassNotFoundException ex) {
            System.err.println(ex);
        }

        spUI.spArr.add(new SpareParts(sparePartID, nameOfItem, category, brand, quantity));
        spUI.dtm.setRowCount(0); // reset data model
        for (int i = 0; i < spUI.spArr.size(); i++) {
            Object[] objs = {spUI.spArr.get(i).getSparePartID(), spUI.spArr.get(i).getNameOfItem(), spUI.spArr.get(i).getCategory(), spUI.spArr.get(i).getBrand(), spUI.spArr.get(i).getQuantity()};
            spUI.dtm.addRow(objs);
        }
        clearField();
    }//GEN-LAST:event_kButton2ActionPerformed

    public void clearField() {
        spUI.spNameBox.requestFocus();
        spUI.spNameBox.setText("");
        spUI.spIDBox.setText("");
        spUI.spCategoryBox.setSelectedIndex(0);
        spUI.spBrandBox.setText("");
        spUI.spQuantityBox.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplaySparePartsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplaySparePartsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplaySparePartsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplaySparePartsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplaySparePartsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private com.k33ptoo.components.KButton kButton1;
    private com.k33ptoo.components.KButton kButton2;
    private com.k33ptoo.components.KButton kButton3;
    private com.k33ptoo.components.KButton kButton4;
    private com.k33ptoo.components.KButton kButton5;
    public static javax.swing.JScrollPane scrollPane;
    public javax.swing.JTable spDisplayTable;
    // End of variables declaration//GEN-END:variables
}
